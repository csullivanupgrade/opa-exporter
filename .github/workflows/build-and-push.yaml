---
name: Build

on:
  pull_request:
  push:
    branches:
    - 'main'
    tags:
    - "v*.*.*"
  schedule:
    - cron: '0 8 * * *'

env:
  IMAGE_NAME: opa-exporter
  NAMESPACE: csullivanupgrade

jobs:
  build:
    name: Docker
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - name: Install kubectx
      run: sudo snap install --classic kubectx

    - name: Install Task
      uses: arduino/setup-task@v1

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.3.0
      with:
        cluster_name: opa-exporter

    - name: Checkout
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to GitHub Container Registry (ghcr.io)
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
          ghcr.io/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          type=raw,value={{ tag }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

    - name: Build Docker images
      uses: docker/build-push-action@v3
      with:
        tags: ghcr.io/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:local

    - name: Check for warning in /metrics
      run: |
        task gk:deploy AUDIT_INTERVAL=5s
        task deploy
        task test:policy
        task test:check-for-warning

    - name: Push Docker images
      uses: docker/build-push-action@v3
      with:
        push: ${{ startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
