version: '3'

vars:
  BIN_NAME: tmp/opa-exporter
  CLUSTER_NAME: opa-exporter
  CONTEXT: kind-{{ .CLUSTER_NAME }}
  CWD:
    sh: pwd
  ED_ENABLED: "false"
  IMAGE_NAME: ghcr.io/csullivanupgrade/opa-exporter
  IMAGE_TAG: local
  NAMESPACE: gatekeeper
  NAMESPACE_PROMETHEUS: prometheus
  NAMESPACE_TEST: test
  TMP_DIR: "{{ .CWD }}/tmp"

includes:
  common:
    taskfile: taskfile/common.yaml
  gk:
    taskfile: taskfile/gatekeeper.yaml
  kind:
    taskfile: taskfile/kind.yaml
  prom:
    taskfile: taskfile/prom.yaml
  test:
    taskfile: taskfile/test.yaml

tasks:
  default:
    desc: Describe available tasks.
    cmds:
    - task --list-all

  req:
    desc: Test that prerequisite tools have been installed.
    cmds:
    - jq --version
    - kubectx --help
    - docker version
    - kubectl version
    - helm version
    - kind version

  clean:
    desc: Remove temporary local artifacts.
    cmds:
    - test -n {{ .TMP_DIR }}
    - rm -rf {{ .TMP_DIR }}

  build-bin:
    desc: Build the binary.
    cmds:
    - go build -o {{ .BIN_NAME }} main.go
    env:
      GOOS: "{{ OS }}"
      CGO_ENABLED: "0"
      GOARCH: "{{ ARCH }}"
    sources:
    - main.go
    - pkg
    - go.mod
    - go.sum
    generates:
    - "{{ .BIN_NAME }}"

  # test:
  #   desc: Run tests.
  #   cmds:
  #   # TODO: Unit tests
  #   # - go test ./... -v -short {{ .CLI_ARGS }}
  #   sources:
  #   - main.go
  #   - pkg
  #   - go.mod
  #   - go.sum

  lint:
    desc: Run the linter.
    cmds:
    - golangci-lint run ./... --timeout {{ .TIMEOUT }} {{ .CLI_ARGS }}
    vars:
      TIMEOUT: 1m
    sources:
    - main.go
    - pkg
    - .golangci.yaml

  tidy:
    desc: Tidy up go deps.
    cmds:
    - go mod tidy

  fmt:
    desc: Autoformat go files.
    cmds:
    - gofmt -s -w .

  build:
    desc: Build the docker image and generate a unique tag to force redeployment.
    cmds:
    - docker build --tag {{ .IMAGE_NAME }}:{{ .IMAGE_TAG }} --progress plain .
    sources:
    - Dockerfile
    - main.go
    - pkg
    - go.mod
    - go.sum

  template:
    desc: Provide the opa-exporter template and invoke it with a variable kubectl command.
    deps:
    - task: common:namespace
    cmds:
    - mkdir -p {{ .TMP_DIR }}
    - |
      helm template opa-exporter  \
        --values charts/opa-exporter/values.yaml \
        --set image.tag=local \
        charts/opa-exporter \
      > {{ .TMP_DIR }}/opa-exporter.yaml
    - kubectl --context {{ .CONTEXT }} {{ .ACTION }} --wait --filename {{ .TMP_DIR }}/opa-exporter.yaml
    sources:
    - charts/opa-exporter
    generates:
    - "{{ .TMP_DIR }}/opa-exporter.yaml"

  deploy:
    desc: Deploy opa-exporter to your local cluster.
    cmds:
    - task: kind:load
    - task: template
      vars:
        ACTION: apply
    - |
      kubectl --context {{ .CONTEXT }} wait pod \
        --timeout 120s \
        --for=condition=ready \
        --selector app.kubernetes.io/name=opa-exporter

  delete:
    desc: Remove opa-exporter from your local cluster.
    cmds:
    - task: template
      vars:
        ACTION: delete --ignore-not-found
